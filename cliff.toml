# cliff.toml
# Configuration file for git-cliff.
# See https://git-cliff.org/docs/configuration/

[changelog]
# changelog header
header = """
# Changelog
All notable changes to this project will be documented in this file.\n
"""
# template for the changelog body
# https://git-cliff.org/docs/configuration/templating
body = """
{% if version %}
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}
    ## [unreleased]
{% endif %}
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope %}(**{{ commit.scope }}**){% endif %} {{ commit.message | upper_first }} ([`{{ commit.id | truncate(length=7, end="") }}`](https://github.com/betagouv/api-engagement/commit/{{ commit.id }}))
    {% endfor %}
{% endfor %}
"""
# remove the footer
footer = ""

[git]
# parse the commits based on the conventional commit specification
# https://www.conventionalcommits.org/
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# process the commits starting from the latest tag
latest_tag = "v[0-9].*"
# sort the commits by date
sort_commits = "newest"
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^feat", group = "Features"},
    { message = "^fix", group = "Bug Fixes"},
    { message = "^doc", group = "Documentation"},
    { message = "^perf", group = "Performance"},
    { message = "^refactor", group = "Refactoring"},
    { message = "^style", group = "Styling"},
    { message = "^test", group = "Testing"},
    { message = "^chore", group = "Miscellaneous Tasks"},
    { message = "^revert", group = "Reverts"},
    { message = "^ci", group = "CI/CD"},
]
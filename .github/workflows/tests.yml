name: Tests

on:
  # push:
  pull_request:
  workflow_dispatch:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string

permissions:
  contents: read

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.filter.outputs.api }}
      widget: ${{ steps.filter.outputs.widget }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            api:
              - 'api/**'
            widget:
              - 'widget/**'

  api-tests:
    name: API Tests
    needs: changes
    if: needs.changes.outputs.api == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "18.x"
          cache: "npm"
          cache-dependency-path: "api/package-lock.json"

      - name: Install dependencies
        run: cd api && npm ci

      - name: Start integration services
        run: docker compose -f docker-compose.test.yml up -d

      - name: Run unit tests
        run: npm --prefix api run test:unit:ci

      - name: Run integration tests
        run: npm --prefix api run test:integration:ci

      - name: Stop integration services
        if: always()
        run: docker compose -f docker-compose.test.yml down -v

  widgets-tests:
    name: Widget Tests
    needs: changes
    if: needs.changes.outputs.widget == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    steps:
      - uses: actions/checkout@v5

      - name: Use Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "18.x"
          cache: "npm"
          cache-dependency-path: "widget/package-lock.json"

      - name: Install dependencies
        run: cd widget && npm ci

      - name: Install Playwright browsers and dependencies
        run: cd widget && npx playwright install --with-deps

      - name: Run tests
        run: cd widget && npm run test:e2e

      - name: Upload HTML test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: widget/tests/e2e/_playwright-report
          retention-days: 30

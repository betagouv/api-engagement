# Build and push Docker images:
# - main branch: production
# - staging branch: staging
#
# For each service (app, api, process, widget-benevolat, widget-volontariat)
# - use build args to pass environment variables
# - build and push image to GitHub Container Registry
#
# NB:
# - if API tests, process test or lint fails, the build won't be triggered
# - Env vars has to be configured in GitHub secrets with following format: [SERVICE]_ENV_[ENV]. Example:
#   - APP_ENV_PRODUCTION
#   - APP_ENV_STAGING

name: Build and Push Docker Images
on:
  workflow_run:
    workflows: ["API Tests", "Process Tests", "Lint"]
    types: [completed]
    branches: [main, staging]

  # TODO: remove me
  push:
    branches: [feature--docker]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    name: Build and Push Docker Images
    # TODO: "push" event name is for feature--docker branch only. Should be removed when merged
    if: github.event_name == 'push' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [app, api, process, widget-benevolat, widget-volontariat]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set environment variables based on workflow
        id: vars
        env:
          HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
        run: |
          if [[ "$HEAD_BRANCH" == 'main' ]]; then
            echo "ENV=production" >> $GITHUB_OUTPUT
            echo "Using production environment variables"
          else
            echo "ENV=staging" >> $GITHUB_OUTPUT
            echo "Using staging environment variables"
          fi

      - name: Debug secrets availability
        id: debug_secrets
        run: |
          echo "Checking secrets availability..."
          if [ -n "${{ secrets.PROCESS_ENV_PRODUCTION }}" ]; then
            echo "Secret PROCESS_ENV_PRODUCTION is set"
          else
            echo "Secret PROCESS_ENV_PRODUCTION is NOT set"
          fi
          if [ -n "${{ secrets.PROCESS_ENV_STAGING }}" ]; then
            echo "SHA256: $(echo "${{ secrets.PROCESS_ENV_STAGING }}" | sha256sum)"
            echo "Length: $(echo -n "${{ secrets.PROCESS_ENV_STAGING }}" | wc -c)"
          else
            echo "Secret PROCESS_ENV_STAGING is NOT set"
          fi
          echo "Current environment: ${{ steps.vars.outputs.ENV }}"
          echo "Workflow permissions: ${{ toJson(github.permissions) }}"
          echo "Actor: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"

      - name: Set app build args
        if: matrix.service == 'app'
        id: app_args
        run: |
          echo "ARGS=ENV_FILE_CONTENT=${{ steps.vars.outputs.ENV == 'production' && secrets.APP_ENV_PRODUCTION || secrets.APP_ENV_STAGING }}" >> $GITHUB_OUTPUT

      - name: Set api build args
        if: matrix.service == 'api'
        id: api_args
        run: |
          echo "ARGS=ENV_FILE_CONTENT=${{ steps.vars.outputs.ENV == 'production' && secrets.API_ENV_PRODUCTION || secrets.API_ENV_STAGING }}" >> $GITHUB_OUTPUT

      - name: Set process build args
        if: matrix.service == 'process'
        id: process_args
        run: |
          echo "ARGS=ENV_FILE_CONTENT=${{ steps.vars.outputs.ENV == 'production' && secrets.PROCESS_ENV_PRODUCTION || secrets.PROCESS_ENV_STAGING }}" >> $GITHUB_OUTPUT

      - name: Set widget-benevolat build args
        if: matrix.service == 'widget-benevolat'
        id: widget_benevolat_args
        run: |
          echo "ARGS=ENV_FILE_CONTENT=${{ steps.vars.outputs.ENV == 'production' && secrets.WIDGET_BENEVOLAT_ENV_PRODUCTION || secrets.WIDGET_BENEVOLAT_ENV_STAGING }}" >> $GITHUB_OUTPUT

      - name: Set widget-volontariat build args
        if: matrix.service == 'widget-volontariat'
        id: widget_volontariat_args
        run: |
          echo "ARGS=ENV_FILE_CONTENT=${{ steps.vars.outputs.ENV == 'production' && secrets.WIDGET_VOLONTARIAT_ENV_PRODUCTION || secrets.WIDGET_VOLONTARIAT_ENV_STAGING }}" >> $GITHUB_OUTPUT

      - name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile.production
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/${{ matrix.service }}:${{ steps.vars.outputs.ENV }}
            ghcr.io/${{ github.repository }}/${{ matrix.service }}:${{ steps.vars.outputs.ENV }}-${{ github.sha }}
          build-args: |
            ${{ matrix.service == 'app' && steps.app_args.outputs.ARGS || '' }}
            ${{ matrix.service == 'api' && steps.api_args.outputs.ARGS || '' }}
            ${{ matrix.service == 'process' && steps.process_args.outputs.ARGS || '' }}
            ${{ matrix.service == 'widget-benevolat' && steps.widget_benevolat_args.outputs.ARGS || '' }}
            ${{ matrix.service == 'widget-volontariat' && steps.widget_volontariat_args.outputs.ARGS || '' }}

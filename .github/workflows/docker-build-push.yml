# Build and push Docker images:
# - main branch: production
# - staging branch: staging
#
# For each service (app, api, process, widget-benevolat, widget-volontariat)
# - use build args to pass environment variables
# - build and push image to GitHub Container Registry
#
# NB:
# - if API tests, process test or lint fails, the build won't be triggered
# - Env vars has to be configured in GitHub secrets with following format: [SERVICE]_ENV_[ENV]. Example:
#   - APP_ENV_PRODUCTION
#   - APP_ENV_STAGING

name: Build and Push Docker Images
on:
  workflow_run:
    workflows: ["API Tests", "Process Tests", "Lint"]
    types: [completed]
    branches: [main, staging]

  # TODO: remove me
  push:
    branches: [feature--docker]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    name: Build and Push Docker Images
    # TODO: "push" event name is for feature--docker branch only. Should be removed when merged
    if: github.event_name == 'push' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [app, api, process, widget-benevolat, widget-volontariat]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set environment variables based on workflow
        id: vars
        env:
          HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
        run: |
          if [[ "$HEAD_BRANCH" == 'main' ]]; then
            echo "ENV=production" >> $GITHUB_OUTPUT
            echo "Push to production image"
          else
            echo "ENV=staging" >> $GITHUB_OUTPUT
            echo "Push to staging image"
          fi

      # Set app build args
      - name: Set app build args
        id: app_args
        if: matrix.service == 'app'
        run: |
          if [[ "${{ steps.vars.outputs.ENV }}" == 'production' ]]; then
            # Production environment
            echo "VITE_ENV=production" >> $GITHUB_OUTPUT
            echo "VITE_API_URL=${{ secrets.API_URL_PRODUCTION }}" >> $GITHUB_OUTPUT
            echo "VITE_BENEVOLAT_URL=${{ secrets.BENEVOLAT_URL_PRODUCTION }}" >> $GITHUB_OUTPUT
            echo "VITE_VOLONTARIAT_URL=${{ secrets.VOLONTARIAT_URL_PRODUCTION }}" >> $GITHUB_OUTPUT
            echo "VITE_SENTRY_DSN=${{ secrets.SENTRY_DSN_PRODUCTION }}" >> $GITHUB_OUTPUT
          else
            # Staging environment
            echo "VITE_ENV=staging" >> $GITHUB_OUTPUT
            echo "VITE_API_URL=${{ secrets.API_URL_STAGING }}" >> $GITHUB_OUTPUT
            echo "VITE_BENEVOLAT_URL=${{ secrets.BENEVOLAT_URL_STAGING }}" >> $GITHUB_OUTPUT
            echo "VITE_VOLONTARIAT_URL=${{ secrets.VOLONTARIAT_URL_STAGING }}" >> $GITHUB_OUTPUT
            echo "VITE_SENTRY_DSN=${{ secrets.SENTRY_DSN_STAGING }}" >> $GITHUB_OUTPUT
          fi

      # Set widget-benevolat build args
      - name: Set widget-benevolat build args
        id: widget_benevolat_args
        if: matrix.service == 'widget-benevolat'
        run: |
          if [[ "${{ steps.vars.outputs.ENV }}" == 'production' ]]; then
            # Production environment
            echo "WIDGET_ENV=production" >> $GITHUB_OUTPUT
            echo "WIDGET_API_URL=${{ secrets.API_URL_PRODUCTION }}" >> $GITHUB_OUTPUT
            echo "WIDGET_SENTRY_DSN=${{ secrets.SENTRY_DSN_PRODUCTION }}" >> $GITHUB_OUTPUT
            echo "WIDGET_GOOGLE_FOR_JOB_KEY=${{ secrets.GOOGLE_FOR_JOB_KEY_PRODUCTION }}" >> $GITHUB_OUTPUT
          else
            # Staging environment
            echo "WIDGET_ENV=staging" >> $GITHUB_OUTPUT
            echo "WIDGET_API_URL=${{ secrets.API_URL_STAGING }}" >> $GITHUB_OUTPUT
            echo "WIDGET_SENTRY_DSN=${{ secrets.SENTRY_DSN_STAGING }}" >> $GITHUB_OUTPUT
            echo "WIDGET_GOOGLE_FOR_JOB_KEY=${{ secrets.GOOGLE_FOR_JOB_KEY_STAGING }}" >> $GITHUB_OUTPUT
          fi

      # Set widget-volontariat build args
      - name: Set widget-volontariat build args
        id: widget_volontariat_args
        if: matrix.service == 'widget-volontariat'
        run: |
          if [[ "${{ steps.vars.outputs.ENV }}" == 'production' ]]; then
            # Production environment
            echo "WIDGET_ENV=production" >> $GITHUB_OUTPUT
            echo "WIDGET_API_URL=${{ secrets.API_URL_PRODUCTION }}" >> $GITHUB_OUTPUT
            echo "WIDGET_SENTRY_DSN=${{ secrets.SENTRY_DSN_PRODUCTION }}" >> $GITHUB_OUTPUT
          else
            # Staging environment
            echo "WIDGET_ENV=staging" >> $GITHUB_OUTPUT
            echo "WIDGET_API_URL=${{ secrets.API_URL_STAGING }}" >> $GITHUB_OUTPUT
            echo "WIDGET_SENTRY_DSN=${{ secrets.SENTRY_DSN_STAGING }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile.production
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/${{ matrix.service }}:${{ steps.vars.outputs.ENV }}
            ghcr.io/${{ github.repository }}/${{ matrix.service }}:${{ steps.vars.outputs.ENV }}-${{ github.sha }}
          build-args: |
            # App (Vite) variables
            ${{ matrix.service == 'app' && format('VITE_ENV={0}', steps.app_args.outputs.VITE_ENV) || '' }}
            ${{ matrix.service == 'app' && format('VITE_API_URL={0}', steps.app_args.outputs.VITE_API_URL) || '' }}
            ${{ matrix.service == 'app' && format('VITE_BENEVOLAT_URL={0}', steps.app_args.outputs.VITE_BENEVOLAT_URL) || '' }}
            ${{ matrix.service == 'app' && format('VITE_VOLONTARIAT_URL={0}', steps.app_args.outputs.VITE_VOLONTARIAT_URL) || '' }}
            ${{ matrix.service == 'app' && format('VITE_SENTRY_DSN={0}', steps.app_args.outputs.VITE_SENTRY_DSN) || '' }}

            # Widget Benevolat variables
            ${{ matrix.service == 'widget-benevolat' && format('ENV={0}', steps.widget_benevolat_args.outputs.WIDGET_ENV) || '' }}
            ${{ matrix.service == 'widget-benevolat' && format('API_URL={0}', steps.widget_benevolat_args.outputs.WIDGET_API_URL) || '' }}
            ${{ matrix.service == 'widget-benevolat' && format('SENTRY_DSN={0}', steps.widget_benevolat_args.outputs.WIDGET_SENTRY_DSN) || '' }}
            ${{ matrix.service == 'widget-benevolat' && format('GOOGLE_FOR_JOB_KEY={0}', steps.widget_benevolat_args.outputs.WIDGET_GOOGLE_FOR_JOB_KEY) || '' }}

            # Widget Volontariat variables
            ${{ matrix.service == 'widget-volontariat' && format('ENV={0}', steps.widget_volontariat_args.outputs.WIDGET_ENV) || '' }}
            ${{ matrix.service == 'widget-volontariat' && format('API_URL={0}', steps.widget_volontariat_args.outputs.WIDGET_API_URL) || '' }}
            ${{ matrix.service == 'widget-volontariat' && format('SENTRY_DSN={0}', steps.widget_volontariat_args.outputs.WIDGET_SENTRY_DSN) || '' }}

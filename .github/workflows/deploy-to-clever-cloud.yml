name: Deploy to Clever Cloud

on:
  workflow_run:
    workflows: ["Build and Push Docker Images"]
    types: [completed]
    branches: [main, staging, feature--docker] # TODO: remove me

  # TODO: remove me. Direct push trigger for testing
  push:
    branches: [feature--docker]

  # Manual trigger if needed
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production
      service:
        description: "Service to deploy"
        required: true
        type: choice
        options:
          - all
          - app
          - api
          - process
          - widget-benevolat
          - widget-volontariat

permissions:
  contents: read
  packages: read

jobs:
  set-env:
    name: Determine Environment
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'
    outputs:
      environment_name: ${{ steps.set-env.outputs.environment }}
    steps:
      - name: Set environment based on input or branch
        id: set-env
        env:
          HEAD_BRANCH: ${{ github.event.workflow_run.head_branch || github.ref_name }}
          MANUAL_ENV: ${{ github.event.inputs.environment }}
        run: |
          if [[ "$GITHUB_EVENT_NAME" == 'workflow_dispatch' ]]; then
            echo "environment=$MANUAL_ENV" >> $GITHUB_OUTPUT
          elif [[ "$HEAD_BRANCH" == 'main' ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
          else
            echo "environment=staging" >> $GITHUB_OUTPUT
          fi

  deploy:
    name: Deploy to Clever Cloud
    needs: set-env
    runs-on: ubuntu-latest
    environment: ${{ needs.set-env.outputs.environment_name }}-${{ matrix.service }}
    strategy:
      matrix:
        service: ${{ (github.event.inputs.service == 'all' || github.event_name != 'workflow_dispatch') && fromJson('["app", "api", "process", "widget-benevolat", "widget-volontariat"]') || fromJson(format('["{}"', github.event.inputs.service)) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Clever Tools
        run: npm install -g clever-tools

      - name: Login to Clever Cloud
        env:
          CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
          CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}
        run: clever login --token=$CLEVER_TOKEN --secret=$CLEVER_SECRET

      - name: Set environment variables
        run: |
          APP_ID="${{ matrix.service }}-${{ needs.set-env.outputs.environment_name }}"
          clever link -a $APP_ID
          clever env set CC_DOCKER_IMAGE ghcr.io/${{ github.repository }}/${{ matrix.service }}:${{ needs.set-env.outputs.environment_name }}-${{ github.sha }}
          clever env set CC_DOCKER_USER ${{ github.actor }}
          clever env set CC_DOCKER_PASSWORD ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Clever Cloud
        run: |
          clever deploy --force
